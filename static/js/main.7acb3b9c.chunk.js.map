{"version":3,"sources":["Components/SharedVideoSelection/Components/SelectedVideos.jsx","Components/SharedVideoSelection/Components/AvailableVideos.jsx","Components/SharedVideoSelection/Components/Arrows.jsx","Components/SharedVideoSelection/SharedVideoSelector.jsx","Components/RecordVideo/Defaults/button.js","Components/RecordVideo/Defaults/record-button.js","Components/RecordVideo/Defaults/stop-button.js","Components/RecordVideo/Defaults/timer.js","Components/RecordVideo/Defaults/countdown.js","Components/RecordVideo/RenderActions.js","Components/RecordVideo/RecordVideo.jsx","Components/StartCampaign/StartCampaign.jsx","Components/IntroductionSlide/IntroductionSlide.jsx","MainPage.jsx","index.jsx"],"names":["SelectedVideos","props","createRows","bind","onDragEnd","this","videos","map","item","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","ListItem","button","key","uuid","onClick","selectItem","ListItemText","className","primary","result","array_move","source","destination","arr","old_index","new_index","length","k","push","undefined","splice","console","log","droppableId","droppableProps","List","style","maxHeight","overflowY","component","aria-label","placeholder","Component","AvailableVideos","Arrows","addToSelectedVideos","addToAvailableVideos","AWS","config","update","region","credentials","CognitoIdentityCredentials","IdentityPoolId","s3","S3","apiVersion","params","Bucket","SharedVideoSelector","state","availableVideos","selectedVideos","selectedItemInAvailableVideos","selectedItemInSelectedVideos","savedText","updateSelectionInAvailableVideos","listObjects","promise","then","s3Objects","listOfObjects","Contents","x","Key","replace","setState","getObjectsFromS3","includes","prevState","filter","el","value","addLink","body","JSON","stringify","campaignId","fetch","method","headers","response","catch","err","updateSelectionInSelectedVideos","uploadSelectionsToDynamo","Button","styled","backgroundColor","color","defaultProps","RecWrapper","div","ButtonBorder","Instructions","InstuctionsHighlight","Border","Text","RecIcon","Timer","nextSeconds","timeLimit","getState","clearInterval","timer","setInterval","seconds","nextState","unit","str","substring","minutes","Math","floor","human","pad","defaultText","Root","Countdown","updateNumber","nextNumber","number","timeout","setTimeout","countdownTime","ActionsWrapper","Actions","isVideoInputSupported","isInlineRecordingSupported","thereWasAnError","isRecording","isCameraOn","streamIsReady","isConnecting","isRunningCountdown","isReplayingVideo","useVideoInput","showReplayControls","replayVideoAutoplayAndLoopOff","onTurnOnCamera","onOpenVideoInput","onTurnOffCamera","onStartRecording","onStopRecording","onStopReplaying","onPauseRecording","onResumeRecording","onConfirm","shouldUseVideoInput","data-qa","renderContent","require","RecordVideo","videoBlobForS3","sendText","videoName","updateVideoBlob","uploadToS3","updateInputValue","sendVideo","videoBlob","videoKey","putObject","Body","evt","target","json","data","restartCampaign","error","type","onChange","isOnInitially","isFlipped","renderActions","actions","onRecordingComplete","StartCampaign","setId","pictureS3","IntroductionSlide","curator","client","imageCounter","border","uploadDrawingBoxImageToS3","uploadImageToS3","html2canvas","document","getElementById","allowTaint","taintTest","logging","useCORS","canvas","dataURItoBlob","toDataURL","dataURI","binary","atob","split","array","i","charCodeAt","Blob","Uint8Array","event","prefix","imageName","files","url","id","name","toggleBorders","alt","crossOrigin","MainPage","slideCounter","updateCampaignId","updateSlideCounter","slides","selectPageToShow","ReactDOM","render"],"mappings":"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","file":"static/js/main.7acb3b9c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport {uuid} from 'uuidv4';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nclass SelectedVideos extends Component {\n    constructor(props) {\n        super(props);\n        this.createRows = this.createRows.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    createRows() {\n        return this.props.videos.map((item, index) =>\n            <Draggable draggableId={`draggable-${index}`} index={index}>\n                {(provided, snapshot) => (\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <ListItem button key={uuid()} onClick={() => this.props.selectItem(item)}>\n                            <ListItemText className=\"listItem\" primary={item} />\n                        </ListItem>\n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n\n    onDragEnd(result) {\n        this.array_move(this.props.videos, result.source.index, result.destination.index)\n    }\n\n    array_move(arr, old_index, new_index) {\n        if (new_index >= arr.length) {\n            var k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        console.log(arr);\n    };\n\n    render() {\n        return (\n            <div className=\"singleBox\">\n                <h2 className=\"centerVideosHeader\">Selected Videos</h2>\n                <div className=\"line\"></div>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                        {(provided, snapshot) => (\n                            <div ref={provided.innerRef} {...provided.droppableProps}>\n                                <List style={{\n                                    maxHeight:'87%',\n                                    overflowY:'scroll'\n                                }} component=\"nav\" aria-label=\"main mailbox folders\">\n                                    {this.createRows()}\n                                </List>\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n            </div>\n        )\n    }\n}\n\nexport default SelectedVideos;","import React, {Component} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {uuid} from 'uuidv4';\n\nclass AvailableVideos extends Component {\n    constructor(props){\n        super(props);\n        this.createRows = this.createRows.bind(this);\n    }\n\n    createRows() {\n        return this.props.videos.map((item) =>\n            <ListItem button key={uuid()} onClick={() => this.props.selectItem(item)}>\n                <ListItemText className=\"listItem\" primary={item} />\n            </ListItem>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"singleBox\">\n                <h2 className=\"centerVideosHeader\">Available Videos</h2>\n                <div className=\"line\"></div>\n                <List style={{\n                    maxHeight:'87%',\n                    overflowY:'scroll'\n                }} component=\"nav\" aria-label=\"main mailbox folders\">\n                    {this.createRows()}\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default AvailableVideos;","import React, {Component} from 'react';\n\nclass Arrows extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div className=\"arrowHolder\">\n                <div className=\"arrow right\" onClick={() => this.props.addToSelectedVideos()}></div>\n                <div className=\"arrow left\" onClick={() => this.props.addToAvailableVideos()}></div>\n            </div>\n\n        )\n    }\n}\n\nexport default Arrows;","import React, {Component} from 'react';\nimport SelectedVideos from './Components/SelectedVideos.jsx';\nimport AvailableVideos from './Components/AvailableVideos.jsx';\nimport Arrows from './Components/Arrows.jsx';\nimport AWS from 'aws-sdk';\n\nAWS.config.update({\n    region: 'eu-west-1',\n    credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: 'eu-west-1:19a6a80e-a0d3-4e14-b190-2436be30f5d4'\n    })\n})\n\nvar s3 = new AWS.S3({\n    apiVersion: \"2006-03-01\",\n    params: { Bucket: 'video-messaging-library-videos' }\n});\n\nclass SharedVideoSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            availableVideos: [],\n            selectedVideos: [],\n            selectedItemInAvailableVideos: '',\n            selectedItemInSelectedVideos: '',\n            savedText: 'Save Video Order'\n        }\n        this.updateSelectionInAvailableVideos = this.updateSelectionInAvailableVideos.bind(this);\n    }\n\n    async getObjectsFromS3() {\n        const s3Objects = await s3.listObjects().promise().then(result => result);\n        const listOfObjects = s3Objects.Contents.map(x => x.Key.replace(\".mp4\", \"\"))\n        this.setState({\n            availableVideos: listOfObjects\n        })\n    }\n\n    async componentDidMount() {\n        await this.getObjectsFromS3();\n    }\n\n    addToSelectedVideos(){\n        if(!this.state.selectedVideos.includes(this.state.selectedItemInAvailableVideos)\n            && this.state.selectedItemInAvailableVideos != ''){\n            this.setState(prevState => ({\n                availableVideos: prevState.availableVideos.filter(el => el != prevState.selectedItemInAvailableVideos),\n                selectedVideos: [...prevState.selectedVideos, prevState.selectedItemInAvailableVideos]\n            }));\n        }\n    }\n\n    addToAvailableVideos(){\n        if(!this.state.availableVideos.includes(this.state.selectedItemInSelectedVideos\n            && this.state.selectedItemInSelectedVideos != '')){\n            this.setState(prevState => ({\n                selectedVideos: prevState.selectedVideos.filter(el => el != prevState.selectedItemInSelectedVideos),\n                availableVideos: [...prevState.availableVideos, prevState.selectedItemInSelectedVideos]\n            }));\n        }\n    }\n\n    updateSelectionInAvailableVideos(value) {\n        console.log(value)\n        this.setState(() => ({\n            selectedItemInAvailableVideos: value\n        }))\n    }\n\n    updateSelectionInSelectedVideos(value){\n        this.setState(() => ({\n            selectedItemInSelectedVideos: value\n        }))\n    }\n\n    uploadSelectionsToDynamo(){\n        const url = 'https://uet3meby6k.execute-api.eu-west-1.amazonaws.com/dev/add/videoOrder';\n        var fillSpace = this.state.selectedVideos.map(x=> x.replace(\" \", \"+\"))\n        var addLink = fillSpace.map(x=> `https://video-messaging-library-videos.s3.eu-west-2.amazonaws.com/${x}.mp4`)\n        var body = JSON.stringify({\n            \"campaignId\": this.props.campaignId,\n            \"videoOrder\": addLink\n        })\n        console.log(body)\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: body\n        }).then(response => {\n            this.setState({\n                savedText: 'Saved'\n            })\n            console.log(response)\n        }).catch(err => console.log(err))\n    }\n\n  render() {\n    return (\n        <div>\n          <div className=\"row\">\n            <AvailableVideos videos={this.state.availableVideos} selectItem={(value) => this.updateSelectionInAvailableVideos(value)}/>\n            <Arrows addToSelectedVideos={() => this.addToSelectedVideos()} addToAvailableVideos={() => this.addToAvailableVideos()} />\n            <SelectedVideos videos={this.state.selectedVideos} selectItem={(value) => this.updateSelectionInSelectedVideos(value)}/>\n            <button className=\"saveOrder\" onClick={() => this.uploadSelectionsToDynamo()}>{this.state.savedText}</button>\n          </div>\n        </div>\n    );\n  }\n}\nexport default SharedVideoSelector;\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.backgroundColor};\n  color: ${props => props.color};\n  border-radius: 4px;\n  padding: 17px 18px;\n  border: none;\n  margin: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    background: #eee;\n  }\n`\n\nButton.defaultProps = {\n  color: 'black',\n  backgroundColor: 'white'\n}\n\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.backgroundColor};\n  color: ${props => props.color};\n  border-radius: 50%;\n  width: 64px;\n  height: 64px;\n  background: rgba(227, 73, 28, 0.8);\n  outline: none;\n  border: none;\n  cursor: pointer;\n\n  :hover {\n    background: #fb6d42;\n  }\n`\n\nconst RecWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst ButtonBorder = styled.div`\n  border: 8px solid rgba(255, 255, 255, 0.4);\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n`\nconst Instructions = styled.div`\n  font-family: Arial;\n  font-size: 14px;\n  color: #ffffff;\n  letter-spacing: 1.75px;\n  display: flex;\n  margin-bottom: 20px;\n`\n\nconst InstuctionsHighlight = styled.div`\n  font-weight: 700;\n  color: #dc6547;\n  padding: 0 5px;\n`\n\nButton.defaultProps = {\n  color: 'black',\n  backgroundColor: 'white'\n}\n\nexport default props => (\n  <RecWrapper>\n    <Instructions>\n      <div>PRESS </div>\n      <InstuctionsHighlight> REC </InstuctionsHighlight>\n      WHEN READY\n    </Instructions>\n\n    <ButtonBorder>\n      <Button {...props} />\n    </ButtonBorder>\n  </RecWrapper>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.backgroundColor};\n  color: ${props => props.color};\n  border-radius: 4px;\n  width: 40px;\n  height: 40px;\n  background: rgba(227, 73, 28, 0.8);\n  outline: none;\n  border: none;\n  cursor: pointer;\n  margin: 20px;\n\n  :hover {\n    background: #fb6d42;\n  }\n`\n\nconst Border = styled.div`\n  background: rgba(255, 255, 255, 0.4);\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n`\n\nButton.defaultProps = {\n  color: 'black',\n  backgroundColor: 'white'\n}\n\nexport default props => (\n  <Border>\n    <Button {...props} />\n  </Border>\n)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Text = styled.div`\n  position: absolute;\n  top: 50px;\n  right: 50px;\n  font-family: Menlo, monospace;\n  font-size: 28px;\n  text-shadow: 1px 2px rgba(0, 0, 0, 0.5);\n`\n\nconst RecIcon = styled.div`\n  width: 16px;\n  height: 16px;\n  background: #e55226;\n  border-radius: 50%;\n  float: left;\n  margin: 2px 8px;\n  margin-left: 0;\n`\n\nclass Timer extends Component {\n  static propTypes = {\n    timeLimit: PropTypes.number,\n    defaultText: PropTypes.string\n  }\n\n  constructor (props) {\n    super(props)\n\n    const nextSeconds = props.timeLimit ? props.timeLimit / 1000 : 0\n\n    this.state = this.getState(nextSeconds)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  componentDidMount () {\n    const { timeLimit } = this.props\n    this.timer = setInterval(() => {\n      const { seconds } = this.state\n      const nextSeconds = timeLimit ? seconds - 1 : seconds + 1\n\n      const nextState = this.getState(nextSeconds)\n      this.setState(nextState)\n    }, 1000)\n  }\n\n  pad (unit) {\n    var str = '' + unit\n    var pad = '00'\n    return pad.substring(0, pad.length - str.length) + str\n  }\n\n  getState (seconds) {\n    const minutes = Math.floor(seconds / 60)\n\n    const humanTime =\n      minutes !== 0\n        ? `${minutes}:${this.pad(seconds - minutes * 60)}`\n        : `${seconds - minutes * 60}s`\n\n    return {\n      seconds: seconds,\n      human: humanTime\n    }\n  }\n\n  render () {\n    const defaultText = this.props.defaultText || '0:00'\n    return (\n      <Text {...this.props}>\n        <RecIcon />\n        {this.state.human || defaultText}\n      </Text>\n    )\n  }\n}\n\nexport default Timer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: Menlo, monospace;\n  font-size: 100px;\n  text-shadow: 1px 2px rgba(0, 0, 0, 0.5);\n`\n\nexport default class Countdown extends Component {\n  static propTypes = {\n    countdownTime: PropTypes.number\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      number: props.countdownTime / 1000\n    }\n  }\n\n  componentDidMount () {\n    this.timeout = setTimeout(this.updateNumber, 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timeout)\n  }\n\n  updateNumber = () => {\n    const nextNumber = this.state.number - 1\n    this.setState({\n      number: nextNumber\n    })\n    if (nextNumber !== 0) {\n      this.timeout = setTimeout(this.updateNumber, 1000)\n    }\n  }\n\n  render () {\n    return <Root>{this.state.number !== 0 ? this.state.number : null}</Root>\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Button from './Defaults/button'\nimport RecordButton from './Defaults/record-button'\nimport StopButton from './Defaults/stop-button'\nimport Timer from './Defaults/timer'\nimport Countdown from './Defaults/countdown'\n\nlet ActionsWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n  margin-bottom: 80px;\n`\n\nconst Actions = ({\n                     isVideoInputSupported,\n                     isInlineRecordingSupported,\n                     thereWasAnError,\n                     isRecording,\n                     isCameraOn,\n                     streamIsReady,\n                     isConnecting,\n                     isRunningCountdown,\n                     isReplayingVideo,\n                     countdownTime,\n                     timeLimit,\n                     showReplayControls,\n                     replayVideoAutoplayAndLoopOff,\n                     useVideoInput,\n\n                     onTurnOnCamera,\n                     onTurnOffCamera,\n                     onOpenVideoInput,\n                     onStartRecording,\n                     onStopRecording,\n                     onPauseRecording,\n                     onResumeRecording,\n                     onStopReplaying,\n                     onConfirm\n                 }) => {\n    const renderContent = () => {\n        const shouldUseVideoInput =\n            !isInlineRecordingSupported && isVideoInputSupported\n\n        if (\n            (!isInlineRecordingSupported && !isVideoInputSupported) ||\n            thereWasAnError ||\n            isConnecting ||\n            isRunningCountdown\n        ) {\n            return null\n        }\n\n        if (isReplayingVideo) {\n            return (\n                <Button onClick={onStopReplaying} data-qa='start-replaying' className=\"recordAgain\">\n                    Record Again\n                </Button>\n            )\n        }\n\n        if (isRecording) {\n            return <StopButton onClick={onStopRecording} data-qa='stop-recording' />\n        }\n\n        if (isCameraOn && streamIsReady) {\n            return (\n                <RecordButton onClick={onStartRecording} data-qa='start-recording' />\n            )\n        }\n\n        if (useVideoInput) {\n            return (\n                <Button onClick={onOpenVideoInput} data-qa='open-input'>\n                    Upload a video\n                </Button>\n            )\n        }\n\n        return shouldUseVideoInput ? (\n            <Button onClick={onOpenVideoInput} data-qa='open-input'>\n                Record a video\n            </Button>\n        ) : (\n            <Button onClick={onTurnOnCamera} data-qa='turn-on-camera'>\n                Turn my camera ON\n            </Button>\n        )\n    }\n\n    return (\n        <div>\n            {isRecording && <Timer timeLimit={timeLimit} />}\n            {isRunningCountdown && <Countdown countdownTime={countdownTime} />}\n            <ActionsWrapper>{renderContent()}</ActionsWrapper>\n        </div>\n    )\n}\n\nActions.propTypes = {\n    isVideoInputSupported: PropTypes.bool,\n    isInlineRecordingSupported: PropTypes.bool,\n    thereWasAnError: PropTypes.bool,\n    isRecording: PropTypes.bool,\n    isCameraOn: PropTypes.bool,\n    streamIsReady: PropTypes.bool,\n    isConnecting: PropTypes.bool,\n    isRunningCountdown: PropTypes.bool,\n    countdownTime: PropTypes.number,\n    timeLimit: PropTypes.number,\n    showReplayControls: PropTypes.bool,\n    replayVideoAutoplayAndLoopOff: PropTypes.bool,\n    isReplayingVideo: PropTypes.bool,\n    useVideoInput: PropTypes.bool,\n\n    onTurnOnCamera: PropTypes.func,\n    onTurnOffCamera: PropTypes.func,\n    onOpenVideoInput: PropTypes.func,\n    onStartRecording: PropTypes.func,\n    onStopRecording: PropTypes.func,\n    onPauseRecording: PropTypes.func,\n    onResumeRecording: PropTypes.func,\n    onStopReplaying: PropTypes.func,\n    onConfirm: PropTypes.func\n}\n\nexport default Actions","import React, {Component} from 'react';\nimport VideoRecorder from 'react-video-recorder'\nimport renderActions from './RenderActions.js'\nimport AWS from 'aws-sdk';\nconst { uuid } = require('uuidv4');\n\nAWS.config.update({\n    region: 'eu-west-1',\n    credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: 'eu-west-1:19a6a80e-a0d3-4e14-b190-2436be30f5d4'\n    })\n})\n\nvar s3 = new AWS.S3({\n    apiVersion: \"2006-03-01\",\n    params: { Bucket: 'messaging-unprocessed-videos' }\n});\n\n\nclass RecordVideo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoBlobForS3: {},\n            savedText: 'Save Video',\n            sendText: 'Send Video As',\n            videoName: ''\n        }\n        this.updateVideoBlob = this.updateVideoBlob.bind(this);\n        this.uploadToS3 = this.uploadToS3.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.sendVideo = this.sendVideo.bind(this);\n    }\n\n    updateVideoBlob(videoBlob) {\n        this.setState({\n            videoBlobForS3: videoBlob\n        });\n        console.log(this.state.videoBlobForS3)\n    }\n\n    async uploadToS3() {\n        if(this.state.videoBlobForS3 != {}){\n            const videoKey = `${this.props.campaignId}.mp4`\n            s3.putObject({\n                Key: videoKey,\n                Body: this.state.videoBlobForS3,\n                'ContentType': 'video/mp4;codecs=h264',\n                'ACL': 'public-read'\n            }, (err) => {\n                if(err){\n                    console.log(err)\n                } else {\n                    this.setState({\n                        savedText: \"Saved\"\n                    })\n                }\n            })\n        }\n    }\n\n    updateInputValue(evt) {\n        this.setState({\n            videoName: evt.target.value\n        });\n    }\n\n    sendVideo() {\n        fetch('https://vyvqrt13h2.execute-api.eu-west-1.amazonaws.com/dev/sendvideo', {\n            method: 'POST', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                campaignId: this.props.campaignId,\n                videoName: this.state.videoName\n            }),\n        }).then(response => response.json())\n            .then(data => {\n                this.setState({\n                    sendText: 'Saved! Restarting...'\n                })\n                setTimeout(() => {\n                    this.props.restartCampaign()\n                }, 2000)\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-1\">\n                        <button className='sendButton' onClick={this.sendVideo}>{this.state.sendText}</button>\n                        <input className=\"textSendButton\" type=\"text\" onChange={this.updateInputValue}/>\n                    </div>\n                    <div className=\"videoBox\">\n                        <VideoRecorder className=\"Video\"\n                                       isOnInitially={true}\n                                       isFlipped={false}\n                                       showReplayControls={true}\n                                       replayVideoAutoplayAndLoopOff={true}\n                                       renderActions={(actions) => renderActions(actions)}\n                                       onRecordingComplete={ (videoBlob) => {\n                                           this.updateVideoBlob(videoBlob);\n                                       }}\n                        />\n                        <button className=\"saveButton\" onClick={this.uploadToS3}>{this.state.savedText}</button>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default RecordVideo;","import React, {Component} from 'react';\n\nclass StartCampaign extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <button className=\"startCampaign\" onClick={this.props.setId}>\n                Start Campaign\n            </button>\n        );\n    }\n}\n\nexport default StartCampaign;","import React, {Component} from 'react';\nimport html2canvas from 'html2canvas';\nimport AWS from 'aws-sdk';\n\nAWS.config.update({\n    region: 'eu-west-1',\n    credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: 'eu-west-1:19a6a80e-a0d3-4e14-b190-2436be30f5d4'\n    })\n})\n\nvar s3 = new AWS.S3({\n    apiVersion: \"2006-03-01\",\n    params: { Bucket: 'messaging-unprocessed-videos' }\n});\n\nvar pictureS3 = new AWS.S3({\n    apiVersion: \"2006-03-01\",\n    params: { Bucket: 'messaging-intro-pictures' }\n});\n\nclass IntroductionSlide extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curator: '',\n            client: '',\n            imageCounter:0,\n            border: '',\n            savedText: 'Save Image'\n        }\n\n        this.uploadDrawingBoxImageToS3 = this.uploadDrawingBoxImageToS3.bind(this);\n        this.uploadImageToS3 = this.uploadImageToS3.bind(this);\n    }\n\n    uploadDrawingBoxImageToS3() {\n        html2canvas(document.getElementById(\"drawingBox\"), {\n            allowTaint: false,\n            taintTest: false,\n            logging: true,\n            useCORS: true\n        }).then(canvas => {\n            pictureS3.putObject({\n                Key: `${this.props.campaignId}.png`,\n                Body: this.dataURItoBlob(canvas.toDataURL()),\n                'ContentType': 'image/png',\n                'ACL': 'public-read'\n            }, (err) => {\n                if(err){\n                    console.log(err)\n                } else {\n                    this.setState({\n                        savedText: 'Saved'\n                    })\n                }\n            })\n            console.log(canvas)\n        });\n\n    }\n\n    dataURItoBlob(dataURI) {\n        var binary = atob(dataURI.split(',')[1]);\n        var array = [];\n        for(var i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n        }\n        return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n    }\n\n    async uploadImageToS3(event, prefix){\n        const imageName = `${prefix}-${this.props.campaignId}-${this.state.imageCounter}.png`;\n        await s3.putObject({\n            Key: imageName,\n            Body: event.target.files[0],\n            'ContentType': 'image/png',\n            'ACL': 'public-read'\n        }, (err) => {\n            if(err){\n                console.log(err)\n            } else {\n                const url = `https://messaging-unprocessed-videos.s3-eu-west-1.amazonaws.com/${imageName}`\n                this.setState({\n                    [prefix]: url,\n                    imageCounter: this.state.imageCounter + 1\n                })\n            }\n        })\n    }\n\n    toggleBorders(){\n        let border = \"\";\n        if(this.state.border===\"\"){\n            border = \"None\"\n        }\n        this.setState({\n            border: border\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <div className=\"butMarginTop\">\n                            <h4 >Curator Image</h4>\n                            <input id=\"curator\" className=\"imageUpload\" type=\"file\" name=\"CuratorImageUpload\"\n                                   onChange={(event) => this.uploadImageToS3(event, \"curator\")} />\n                        </div>\n\n                        <div className=\"butMarginTop\">\n                            <h4 >Client Image</h4>\n                            <input id=\"client\"  className=\"imageUpload\" type=\"file\" name=\"CuratorImageUpload\"\n                                   onChange={(event) => this.uploadImageToS3(event, \"client\")} />\n                        </div>\n\n                        <button className=\"saveImageButton\" onClick={() => this.uploadDrawingBoxImageToS3()}>{this.state.savedText}</button>\n                        <button className=\"saveImageButton\" onClick={() => this.toggleBorders()}>Toggle Borders</button>\n                    </div>\n                <div id=\"drawingBox\" className=\"drawingBox\">\n                    <div className=\"centreForm\">\n                        <form>\n                            <textarea className=\"introTitle\"\n                                      style={{border:this.state.border}}/>\n                            <textarea className=\"introSubtitle\"\n                                      style={{border:this.state.border}}/>\n                        </form>\n                    </div>\n                    <div className=\"row\">\n                        <img className=\"curatorBox\" alt=\"\" crossOrigin=\"true\"\n                            style={{\"backgroundImage\": `url(${this.state.curator})`,\n                                 \"backgroundSize\":\"cover\",\n                                 border:this.state.border }} >\n\n                        </img>\n                        <img className=\"clientBox\" alt=\"\" crossOrigin=\"true\"\n                            style={{\"backgroundImage\": `url(${this.state.client})`,\n                                 \"backgroundSize\":\"cover\",\n                                 border:this.state.border  }} >\n\n                        </img>\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n// style={{\"backgroundImage\": `url(${this.state.curator})`,\nexport default IntroductionSlide;","import React, {Component} from 'react';\nimport SharedVideoSelector from './Components/SharedVideoSelection/SharedVideoSelector.jsx'\nimport RecordVideo from './Components/RecordVideo/RecordVideo.jsx';\nimport StartCampaign from './Components/StartCampaign/StartCampaign.jsx';\nimport IntroductionSlide from './Components/IntroductionSlide/IntroductionSlide.jsx';\nconst { uuid } = require('uuidv4');\n\nclass MainPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            campaignId: '',\n            slideCounter: 0\n        }\n        this.updateCampaignId = this.updateCampaignId.bind(this);\n        this.updateSlideCounter = this.updateSlideCounter.bind(this);\n        this.restartCampaign = this.restartCampaign.bind(this);\n    }\n\n    updateCampaignId(){\n        this.setState({\n            campaignId: uuid()\n        });\n    }\n\n    updateSlideCounter(value){\n        if(this.state.slideCounter+value >= 0 && this.state.slideCounter+value<=2){\n            this.setState({\n                slideCounter: this.state.slideCounter+value\n            })\n        }\n\n    }\n\n    restartCampaign(){\n        this.setState({\n            campaignId:''\n        })\n    }\n\n    selectPageToShow(){\n        const slides = [<IntroductionSlide campaignId={this.state.campaignId}/>,\n                        <SharedVideoSelector campaignId={this.state.campaignId}/>,\n                        <RecordVideo campaignId={this.state.campaignId} restartCampaign={this.restartCampaign}/>];\n        if(this.state.campaignId=='') {\n            return (\n                <StartCampaign setId={this.updateCampaignId}/>\n            )\n        } else {\n            console.log(this.state.slideCounter)\n            return (\n                <div>\n                    {slides[this.state.slideCounter]}\n                    <div className=\"row\">\n                        <div className=\"arrow left bottomLeft\" onClick={() => this.updateSlideCounter(-1)}></div>\n                        <div className=\"arrow right bottomRight\" onClick={() => this.updateSlideCounter(1)}></div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"container borderedBox\">\n                {this.selectPageToShow()}\n            </div>\n        );\n    }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainPage from './MainPage.jsx';\n// Application entrypoint.\n\n// Load up the application styles\nrequire('./styles/application.scss');\n\n// Render the top-level React component\n\nReactDOM.render(<MainPage />, document.getElementById('react-root'));\n"],"sourceRoot":""}